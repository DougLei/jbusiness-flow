// 业务流中部分action的配置设计

// sql
{
	"type":"sql_query", // sql查询, sql增删改都是相同的配置方式
	"content":{
		"sql":"SELECT ID, NAME, AGE FROM SYS_USER WHERE SEX = ?", // 查询的sql语句
		"params":[{ // sql语句中用到的参数
			"name":"", // 从指定的来源, 根据该名称获取对应的数据值
			"scope":1 // 参数值的来源
		}]
	},
	"result":{
		"declare":true,
		"name":"users",
		"scope":5,
		"dataType":"list"
	}
}

// func, 函数

// data_op, 数据操作
{
	"type":"data_op_comp", // 比较 
	"content":{
		"op":"eq", // eq(等于), ne(不等于), gt(大于), ge(大于等于), lt(小于), le(小于等于), bool(表示left的结果就是boolean类型)
		"left":{
			"value":"", // 固定值, 引号可有可无, 根据用户配置()
			
			"paramName":"", // 参数名
			"paramScope":4, // 参数范围, 从指定的范围获取指定参数名的值
			
			"action":{} // 执行action后得到的result
		},
		"right":{
			// 配置内容和left相同, 如果left的结果就是boolean, 则可以不配置right
		}
	}
}


// param_op, 参数操作
{
	"type":"param_op_declare", // 声明参数
	"content":{
		"params":[{
			"name":"", // 参数名
			"description":"", // 参数描述, 默认为null
			"scope":5, // 参数范围, 默认为5
			"dataType":"string", // 参数数据类型, 默认为string
			
			"value":"", // 参数初始值
			
			"refParamName":"", // 引用的参数名称
			"refParamScope":4, // 引用的参数来源, 从指定的范围获取指定参数名的值赋给当前参数
			
			"action":{} // 执行action后得到的result赋给当前参数
		}]
	}
}
1
{
	"type":"param_op_assign", // 参数赋值
	"content":{
		"params":[{
			"name":"", // 参数名
			"scope":0, // 参数范围, 对指定范围的参数进行赋值
			
			"value":"", // 参数初始值
			
			"refParamName":"", // 引用的参数名称
			"refParamScope":4, // 引用的参数来源, 从指定的范围获取指定参数名的值赋给当前参数
			
			"action":{} // 执行action后得到的result赋给当前参数
		}]
	}
}

